upstream frontend {
	server frontend:5173;
}

upstream backend {
	server backend:8000;
}

log_format minimal '$remote_addr $request_method $request_uri -> $status ($request_time s)';

server {
	listen 80;
	server_name localhost;

	# Use the minimal log format
	access_log /var/log/nginx/access.log minimal;

	# User uploads
	location /media/ {
		alias /var/www/uploads/;
		expires 7d;
		add_header Cache-Control "public, max-age=604800";
	}

	# Backend API
	location /api {
		proxy_pass http://backend;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# WebSocket endpoint for backend
	location /ws {
		proxy_pass http://backend;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
	}

	# Frontend
	location / {
		proxy_pass http://frontend;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;

		# WebSocket support
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}
}